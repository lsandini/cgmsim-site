{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the CGMSIM documentation \u2301 Introduction \u2301 This application simulates very basically in real time the effects of food and various insulin analogs on the blood glucose of a patient with type 1 diabetes (T1D). Rather that blood glucose values, it displays a continuous glucose sensor (CGM) trace using Nightscout (NS) as visualization tool. Since even the most accurate physiological simulators can at best provide only an approximation of what happens in a biological organism, the goal of this simulation is not even to try to match reality, but to provide a practising, learning and/or teaching tool. The treatment goal in T1D is keeping the blood sugar or CGM curve values as close as possible to that of healthy people. In realistic terms, it means 3.9 \u2013 10 mmol/l or 70-180 mg/dl for CGM curves. The Time In Range (TIR) should be at least 70%. Important Please understand that this simulation cannot: predict individual response to treatment replace traditional patient/caregiver education This is work in progress, and all feedback is welcome ! Physiology \u2301 To understand the mechanics of such a simulation, a few things must be considered. The ingestion of food and the digestion and absorption of carbohydrates will also increase the blood glucose. Since insulin replacement is administered subcutaneously and not into the hepatic portal vein, some of the ingested food will be absorbed into the main bloodstream directly. After a short delay, the CGM will reflect the increase of blood glucose. The liver releases glucose into the bloodstream by either releasing its stores (glycogenolysis) or synthesizing new glucose from amino acids (neoglucogenesis). The kidneys are also able to produce glucose in small amount. This is called the endogenous glucose production (EGP). Various biological states and hormones can affect this (not only alcohol!). As glucose is released into the blood stream, the blood glucose concentration increases. Physical exercise affects blood glucose in many ways. Intensive bouts of physical activity will trigger the release of adrenalin, which releases increases the EGP. In turn, the increased uptake of glucose in the muscle tissue will lower thew blood glucose as physical activity continues, but also during the post exercise phase, until the muscle glycogen stores are repleted. Mealtime insulins have a short duration of activity (DIA -around 3 hours), while long-acting insulin analogs are meant to be injected once or twice a day. Both will lower blood glucose and thus sensor glucose values. The very intricate biological pathways affecting the blood glucose variations are difficult to replicate mathematically. The absorption of ingested food from the gut, the absorption of insulins from the subcutaneous tissue, the timing of exercise, the circadian rhythm, menstrual cycle and the alignment of the planets in the solra system all play a role. Adding a touch of randomness or chaos brings some realism in the simulation. Why use a simulator ? \u2301 CGMSIM runs in real time and it requires time and dedication to reach its goal. It's not a matter of hours or days, but rather weeks or months. Many instances of the simulator can run on one computer, serving many users at a time, making team training possible. Healthcare Professionals - HCPs Unless you or your family member has T1D, it is hard to figure how treatment can be time-consuming, technically difficult or frustrating. Even without having to worry about the risk of long-term vascular complications or acute and life-threatening hypoglycemia, early adopters of this simulator showed signs of treatment fatigue after a few weeks already. Living with incertainty 24/7, facing reports of treatment \"success\" will teach us all some humility and empathy. Not all patients are equal... Every simulated patient can be defined in terms of weight, insulin sensitivity, amplitude of EGP variability. This website will describe step by step how to install and kickstart the simulation as an administrator, and how to use it.","title":"Home"},{"location":"#welcome-to-the-cgmsim-documentation","text":"","title":"Welcome to the CGMSIM documentation"},{"location":"#introduction","text":"This application simulates very basically in real time the effects of food and various insulin analogs on the blood glucose of a patient with type 1 diabetes (T1D). Rather that blood glucose values, it displays a continuous glucose sensor (CGM) trace using Nightscout (NS) as visualization tool. Since even the most accurate physiological simulators can at best provide only an approximation of what happens in a biological organism, the goal of this simulation is not even to try to match reality, but to provide a practising, learning and/or teaching tool. The treatment goal in T1D is keeping the blood sugar or CGM curve values as close as possible to that of healthy people. In realistic terms, it means 3.9 \u2013 10 mmol/l or 70-180 mg/dl for CGM curves. The Time In Range (TIR) should be at least 70%. Important Please understand that this simulation cannot: predict individual response to treatment replace traditional patient/caregiver education This is work in progress, and all feedback is welcome !","title":"Introduction"},{"location":"#physiology","text":"To understand the mechanics of such a simulation, a few things must be considered. The ingestion of food and the digestion and absorption of carbohydrates will also increase the blood glucose. Since insulin replacement is administered subcutaneously and not into the hepatic portal vein, some of the ingested food will be absorbed into the main bloodstream directly. After a short delay, the CGM will reflect the increase of blood glucose. The liver releases glucose into the bloodstream by either releasing its stores (glycogenolysis) or synthesizing new glucose from amino acids (neoglucogenesis). The kidneys are also able to produce glucose in small amount. This is called the endogenous glucose production (EGP). Various biological states and hormones can affect this (not only alcohol!). As glucose is released into the blood stream, the blood glucose concentration increases. Physical exercise affects blood glucose in many ways. Intensive bouts of physical activity will trigger the release of adrenalin, which releases increases the EGP. In turn, the increased uptake of glucose in the muscle tissue will lower thew blood glucose as physical activity continues, but also during the post exercise phase, until the muscle glycogen stores are repleted. Mealtime insulins have a short duration of activity (DIA -around 3 hours), while long-acting insulin analogs are meant to be injected once or twice a day. Both will lower blood glucose and thus sensor glucose values. The very intricate biological pathways affecting the blood glucose variations are difficult to replicate mathematically. The absorption of ingested food from the gut, the absorption of insulins from the subcutaneous tissue, the timing of exercise, the circadian rhythm, menstrual cycle and the alignment of the planets in the solra system all play a role. Adding a touch of randomness or chaos brings some realism in the simulation.","title":"Physiology"},{"location":"#why-use-a-simulator","text":"CGMSIM runs in real time and it requires time and dedication to reach its goal. It's not a matter of hours or days, but rather weeks or months. Many instances of the simulator can run on one computer, serving many users at a time, making team training possible. Healthcare Professionals - HCPs Unless you or your family member has T1D, it is hard to figure how treatment can be time-consuming, technically difficult or frustrating. Even without having to worry about the risk of long-term vascular complications or acute and life-threatening hypoglycemia, early adopters of this simulator showed signs of treatment fatigue after a few weeks already. Living with incertainty 24/7, facing reports of treatment \"success\" will teach us all some humility and empathy. Not all patients are equal... Every simulated patient can be defined in terms of weight, insulin sensitivity, amplitude of EGP variability. This website will describe step by step how to install and kickstart the simulation as an administrator, and how to use it.","title":"Why use a simulator ?"},{"location":"contact/","text":"","title":"Contact me"},{"location":"build/clone/","text":"","title":"Download"},{"location":"build/kickstart/","text":"","title":"Kickstart"},{"location":"build/linux/","text":"","title":"Linux/Ubuntu"},{"location":"build/nightscout/","text":"","title":"Nightscout"},{"location":"build/overview/","text":"","title":"Overview"},{"location":"build/setupscript/","text":"","title":"Setup"},{"location":"model/food/","text":"Modeling the absorption of Carbs from the gut \u2301 There are many complicated and more or less precise published models of carb absorption, but for the purpose of this simulation, a simple bilinear model like the one found in the book \"Think Like a Pancreas\" by Gary Scheiner, and used in Perceptus' Glucodyn simulator will do for now. https://github.com/Perceptus/GlucoDyn/blob/master/basic_math.pdf . To make the absorption of carbs from meals more realistic, I divided each meal in fast and slow absorbing parts. The ratio of fast absorbing carbs is randomly computed to be 10-40 % of the whole meal. However, since todays June 10th 2021, the first 40 g of each meal will always be fast absorbing, so all small snacks will be fast carbs !!! . In the current version of the algorithm, the fast carbs will be abosrbed according to the bilinear model mentioned above, in a period of time of one hour. The remaining (slow) carbs are absorbed in a similar fashion, but over a period of 4 hours.","title":"Carb absorption from the gut"},{"location":"model/food/#modeling-the-absorption-of-carbs-from-the-gut","text":"There are many complicated and more or less precise published models of carb absorption, but for the purpose of this simulation, a simple bilinear model like the one found in the book \"Think Like a Pancreas\" by Gary Scheiner, and used in Perceptus' Glucodyn simulator will do for now. https://github.com/Perceptus/GlucoDyn/blob/master/basic_math.pdf . To make the absorption of carbs from meals more realistic, I divided each meal in fast and slow absorbing parts. The ratio of fast absorbing carbs is randomly computed to be 10-40 % of the whole meal. However, since todays June 10th 2021, the first 40 g of each meal will always be fast absorbing, so all small snacks will be fast carbs !!! . In the current version of the algorithm, the fast carbs will be abosrbed according to the bilinear model mentioned above, in a period of time of one hour. The remaining (slow) carbs are absorbed in a similar fashion, but over a period of 4 hours.","title":"Modeling the absorption of Carbs from the gut"},{"location":"model/la-agonists/","text":"Modeling the activity of mealtime insulins \u2301 This has been done has been done extensively for aspart, lispro (and glulisine), and the model provided here: (https://github.com/LoopKit/Loop/issues/388#issuecomment-317938473 ). This is the model I use to compute the activity of each mealtime insulin dose (called \"bolus\" from now on). I selected a peak time of 55 minutes and a DIA of 300 min. Please notice that these settings may vary, but they are used by the mathematical model and do not always reflect the perception of the duration of activity of a single dose. They can be easily modified in the code, should the user prefer a shorter time to peak, e.g. for faster aspart insulin Fiasp\u00ae. Modeling the activities of the long-acting agonists \u2301 For detemir and glargine instead, models are still lacking. Based on clamp studies in T1D, the intra-individual, day-to-day variation is an important factor affecting the predictability of a single repeated dose. Moreover, the inter-individual variability makes modeling a challenge. Even with the best curve-fitting tools, no \u201cglobal model\u201d was achieved. Since the goal is not to make a perfect model, I decided to use a sinusoidal curve to model detemir, and a half-ellipse for glargine. The obvious reasons are that the mathematics are simple. Modeling Levemir (Levemir\u00ae) \u2301 The clamp studies show that the dose-response curve is linear. With increasing doses from 0.1U/kg to 1.6U/kg, the total activity, or area under the curve (AUC) of the glucose infusion rate (GIR) needed to maintain normal blood glucose is a straight line. However, the DIA seems related to the dose/kg, so that had to be considered in the model. The AUC precisely reflects the injected number of units and is identical for 12U @0.1U/kg and 12U @0.4U/kg. However, when increasing the do dose from 12U @0.4U/kg to 24U @0.4U/kg, you can see that the DIA increases: Duration of Levemir action = 16 + (20 * U/weight) So for 0.1 U/kg, the duration of action is 16+(20 * 0.1) = 18 hours, and for 0.4U/kg, the DIA is 16+(20 * 0.4) = 24 hours. And the model itself is: y= units * (Math.PI/(duration * 2)) * (Math.sin(time * Math.PI/duration)); (for the biexponential model in detemir2.js, the duration of activity = (14 + (24 * dose/weight)), and the peak is duration/3. Modeling Glargine (Lantus\u00ae, Abasaglar\u00ae, Toujeo\u00ae) \u2301 For the time being, only glargine U100 is basically modeled here, with a DIA of 27 hours. Again, the AUC reflects the injected dose. I \u201cchopped\u201d the equation in little bits fo clarity : b = (2 * basalDose)/(Math.PI * duration); // duration is 27 hours x = (Date.now() - time0)/(60 * 60 * 1000); //time0 is the time of injection g = x-(duration / 2); gg = Math.pow(g,2); h = duration / 2; hh= Math.pow(h,2); z = (x-gg) / hh; bb = Math.pow(b,2); y = 2 * Math.sqrt(bb * (1+z)); // where y is the activity of glargine over time (for the biexponential model in glargine2.js, the duration of activity = (22 + (12 * dose/weight)), and the peak is duration/2.5 . Here is a visual aid illustrating the differences between the activity curves of detemir and glargine at different doses: Switching to biexponential models \u2301 30.09.2021 While the very basic mathematical models of long acting insulin analogs are good enough for training, getting closer to published \"curves\" and physiological activity is necessary. I decided to adapt the biexponential model used for mealtimes insulins. The activity of detemir and glargine-U100 depend on the absolute dose, but also on the dose in relation to the patient's weight. Also, the peak of action is achieved at different timepoints. The DIA of detemir is more variable and dose dependent than that of glargine: For detemir, the duration of action is 14h + (24* dose/weight), and the peak is at duration/3. For glargine U100, the duration of action is 22h + (12* dose/weight), and the peak is at duration/2.5. Notice that the curve colours are different, and some of the activity curves seem to derived from steady-state euglycemic clamps.","title":"Long-acting insulin Agonists"},{"location":"model/la-agonists/#modeling-the-activity-of-mealtime-insulins","text":"This has been done has been done extensively for aspart, lispro (and glulisine), and the model provided here: (https://github.com/LoopKit/Loop/issues/388#issuecomment-317938473 ). This is the model I use to compute the activity of each mealtime insulin dose (called \"bolus\" from now on). I selected a peak time of 55 minutes and a DIA of 300 min. Please notice that these settings may vary, but they are used by the mathematical model and do not always reflect the perception of the duration of activity of a single dose. They can be easily modified in the code, should the user prefer a shorter time to peak, e.g. for faster aspart insulin Fiasp\u00ae.","title":"Modeling the activity of mealtime insulins"},{"location":"model/la-agonists/#modeling-the-activities-of-the-long-acting-agonists","text":"For detemir and glargine instead, models are still lacking. Based on clamp studies in T1D, the intra-individual, day-to-day variation is an important factor affecting the predictability of a single repeated dose. Moreover, the inter-individual variability makes modeling a challenge. Even with the best curve-fitting tools, no \u201cglobal model\u201d was achieved. Since the goal is not to make a perfect model, I decided to use a sinusoidal curve to model detemir, and a half-ellipse for glargine. The obvious reasons are that the mathematics are simple.","title":"Modeling the activities of the long-acting agonists"},{"location":"model/la-agonists/#modeling-levemir-levemir","text":"The clamp studies show that the dose-response curve is linear. With increasing doses from 0.1U/kg to 1.6U/kg, the total activity, or area under the curve (AUC) of the glucose infusion rate (GIR) needed to maintain normal blood glucose is a straight line. However, the DIA seems related to the dose/kg, so that had to be considered in the model. The AUC precisely reflects the injected number of units and is identical for 12U @0.1U/kg and 12U @0.4U/kg. However, when increasing the do dose from 12U @0.4U/kg to 24U @0.4U/kg, you can see that the DIA increases: Duration of Levemir action = 16 + (20 * U/weight) So for 0.1 U/kg, the duration of action is 16+(20 * 0.1) = 18 hours, and for 0.4U/kg, the DIA is 16+(20 * 0.4) = 24 hours. And the model itself is: y= units * (Math.PI/(duration * 2)) * (Math.sin(time * Math.PI/duration)); (for the biexponential model in detemir2.js, the duration of activity = (14 + (24 * dose/weight)), and the peak is duration/3.","title":"Modeling Levemir (Levemir\u00ae)"},{"location":"model/la-agonists/#modeling-glargine-lantus-abasaglar-toujeo","text":"For the time being, only glargine U100 is basically modeled here, with a DIA of 27 hours. Again, the AUC reflects the injected dose. I \u201cchopped\u201d the equation in little bits fo clarity : b = (2 * basalDose)/(Math.PI * duration); // duration is 27 hours x = (Date.now() - time0)/(60 * 60 * 1000); //time0 is the time of injection g = x-(duration / 2); gg = Math.pow(g,2); h = duration / 2; hh= Math.pow(h,2); z = (x-gg) / hh; bb = Math.pow(b,2); y = 2 * Math.sqrt(bb * (1+z)); // where y is the activity of glargine over time (for the biexponential model in glargine2.js, the duration of activity = (22 + (12 * dose/weight)), and the peak is duration/2.5 . Here is a visual aid illustrating the differences between the activity curves of detemir and glargine at different doses:","title":"Modeling Glargine (Lantus\u00ae, Abasaglar\u00ae, Toujeo\u00ae)"},{"location":"model/la-agonists/#switching-to-biexponential-models","text":"30.09.2021 While the very basic mathematical models of long acting insulin analogs are good enough for training, getting closer to published \"curves\" and physiological activity is necessary. I decided to adapt the biexponential model used for mealtimes insulins. The activity of detemir and glargine-U100 depend on the absolute dose, but also on the dose in relation to the patient's weight. Also, the peak of action is achieved at different timepoints. The DIA of detemir is more variable and dose dependent than that of glargine: For detemir, the duration of action is 14h + (24* dose/weight), and the peak is at duration/3. For glargine U100, the duration of action is 22h + (12* dose/weight), and the peak is at duration/2.5. Notice that the curve colours are different, and some of the activity curves seem to derived from steady-state euglycemic clamps.","title":"Switching to biexponential models"},{"location":"model/liver/","text":"Modeling the Endogenous Glucose Production (EGP) by the liver \u2301 While this is absolutely neither true nor realistic, for the time being the EGP is modeled as a linear function of time. It equivalents to 10g of absorbed carbs/hour, so depending on the user's insulin sensitivity factor (ISF, mmol/l/U) and carb ratio (CR, g/U), an the EGP effect is EGP * ISF * CR expressed in mmol/l/g. The EGP is significantly affected but the insulin activity, since in the repleted rested state, insulin decreases the liver glucose production more than it increases the peripheral glucose uptake. Moreover other factor like the ingestion of alcohol will significantly decrease the EGP, which could be simple modeled in the future. 16.05.2021 This feature is not yet in use, but a sinusoidal function is added, with which the liver blood glucose impact can be set to vary in a sinusoidal or cosinusoidal manner. The file sinus.js creates the waveforms, and liver.js computes and writes latest_liver.json , not in use yet. This can be added to sgv_start.js later. 17.05.2021 Now sinusoidal variation of liver glucose production is in testing phase. If the ISF is 2mmol/l/U and the CR is 10g/U, then the Carb Factor (CF) is 2mmol/l/10g. Since 10g are produced per hour, the increase in BG due to the liver glucose production is 2mmol/l/h or 0.1666 mmol/l/5min. Multiplying this by a sinusoidal value oscillating from 0.8 to 1.2 will make this impact on BG vary from 0.1333 to 0.2000 mmol/l/5min. the sinus cycle starts at midnight, is maximal at 6 AM (mimicking a dawn effect), back to baseline at 12 AM, minimal at 6 PM (mimicking the effect of light physical activity), and back to baseline at midnight.","title":"Endogenous Glucose production"},{"location":"model/liver/#modeling-the-endogenous-glucose-production-egp-by-the-liver","text":"While this is absolutely neither true nor realistic, for the time being the EGP is modeled as a linear function of time. It equivalents to 10g of absorbed carbs/hour, so depending on the user's insulin sensitivity factor (ISF, mmol/l/U) and carb ratio (CR, g/U), an the EGP effect is EGP * ISF * CR expressed in mmol/l/g. The EGP is significantly affected but the insulin activity, since in the repleted rested state, insulin decreases the liver glucose production more than it increases the peripheral glucose uptake. Moreover other factor like the ingestion of alcohol will significantly decrease the EGP, which could be simple modeled in the future. 16.05.2021 This feature is not yet in use, but a sinusoidal function is added, with which the liver blood glucose impact can be set to vary in a sinusoidal or cosinusoidal manner. The file sinus.js creates the waveforms, and liver.js computes and writes latest_liver.json , not in use yet. This can be added to sgv_start.js later. 17.05.2021 Now sinusoidal variation of liver glucose production is in testing phase. If the ISF is 2mmol/l/U and the CR is 10g/U, then the Carb Factor (CF) is 2mmol/l/10g. Since 10g are produced per hour, the increase in BG due to the liver glucose production is 2mmol/l/h or 0.1666 mmol/l/5min. Multiplying this by a sinusoidal value oscillating from 0.8 to 1.2 will make this impact on BG vary from 0.1333 to 0.2000 mmol/l/5min. the sinus cycle starts at midnight, is maximal at 6 AM (mimicking a dawn effect), back to baseline at 12 AM, minimal at 6 PM (mimicking the effect of light physical activity), and back to baseline at midnight.","title":"Modeling the Endogenous Glucose Production (EGP) by the liver"},{"location":"model/mealtime/","text":"Modeling the activity of mealtime insulins \u2301 This has been done has been done extensively for aspart, lispro (and glulisine), and the model provided here: (https://github.com/LoopKit/Loop/issues/388#issuecomment-317938473 ). This is the model I use to compute the activity of each mealtime insulin dose (called \"bolus\" from now on). I selected a peak time of 55 minutes and a DIA of 300 min. Please notice that these settings may vary, but they are used by the mathematical model and do not always reflect the perception of the duration of activity of a single dose. They can be easily modified in the code, should the user prefer a shorter time to peak, e.g. for faster aspart insulin Fiasp\u00ae.","title":"Mealtime Insulin"},{"location":"model/mealtime/#modeling-the-activity-of-mealtime-insulins","text":"This has been done has been done extensively for aspart, lispro (and glulisine), and the model provided here: (https://github.com/LoopKit/Loop/issues/388#issuecomment-317938473 ). This is the model I use to compute the activity of each mealtime insulin dose (called \"bolus\" from now on). I selected a peak time of 55 minutes and a DIA of 300 min. Please notice that these settings may vary, but they are used by the mathematical model and do not always reflect the perception of the duration of activity of a single dose. They can be easily modified in the code, should the user prefer a shorter time to peak, e.g. for faster aspart insulin Fiasp\u00ae.","title":"Modeling the activity of mealtime insulins"},{"location":"model/overview/","text":"Overview \u2301 Here you'll find details about the sequence of events happening in the simulation. When your simulation has been kickstarted, 3 sensor glucose values of 5 mmol/l or 90 md/dl (sgv) have been uploaded to your Nightscout (NS) website. The \"inner clock\" of the computer hosting the simulation will trigger the execution of various scripts at regular intervals. gather previous sensor glucose values gather previous \"treatments\" (food and/or insulin doses) compute the endogenous glucose production (EGP) compute a random variability factor (RND) compute the global impact of treatments, EGP and RND on glucose values (delta) compute the direction of arrows based on the previous deltas upload a new sensor glucose value and arrow to NS every 5 minutes repeat the cycle","title":"Overview"},{"location":"model/overview/#overview","text":"Here you'll find details about the sequence of events happening in the simulation. When your simulation has been kickstarted, 3 sensor glucose values of 5 mmol/l or 90 md/dl (sgv) have been uploaded to your Nightscout (NS) website. The \"inner clock\" of the computer hosting the simulation will trigger the execution of various scripts at regular intervals. gather previous sensor glucose values gather previous \"treatments\" (food and/or insulin doses) compute the endogenous glucose production (EGP) compute a random variability factor (RND) compute the global impact of treatments, EGP and RND on glucose values (delta) compute the direction of arrows based on the previous deltas upload a new sensor glucose value and arrow to NS every 5 minutes repeat the cycle","title":"Overview"},{"location":"model/physical/","text":"Modeling exercise \u2301 04.08.2021 I just found a way to import Apple Healthkit data from my iPhone my simulator in JSON form. Exercise modeling is not part of the project (yet), but I might use heart rate or cumulative step data when computing CGM values in the future. Something similar from Android wearables or Fitbit wristbands would be cool too. 12.09.2012 Now the files server.js and steps.js have been added. I am using an app called \"Health Auto Export\" that pack selected Health data from the Apple Health App and uploads it in JSON format. I wrote a little API in Node/Express accepting the uploads, and sending the heart rate data as \"BG\" values for display. Dispplay is of course optional, but the heart rate data and the cumulative steps count will be used in the next version ove the simulator to influence the behavious of the CGM curve. Thanks to Lybron Sobers for the export app ! https://github.com/Lybron/health-auto-export","title":"Physical activity"},{"location":"model/physical/#modeling-exercise","text":"04.08.2021 I just found a way to import Apple Healthkit data from my iPhone my simulator in JSON form. Exercise modeling is not part of the project (yet), but I might use heart rate or cumulative step data when computing CGM values in the future. Something similar from Android wearables or Fitbit wristbands would be cool too. 12.09.2012 Now the files server.js and steps.js have been added. I am using an app called \"Health Auto Export\" that pack selected Health data from the Apple Health App and uploads it in JSON format. I wrote a little API in Node/Express accepting the uploads, and sending the heart rate data as \"BG\" values for display. Dispplay is of course optional, but the heart rate data and the cumulative steps count will be used in the next version ove the simulator to influence the behavious of the CGM curve. Thanks to Lybron Sobers for the export app ! https://github.com/Lybron/health-auto-export","title":"Modeling exercise"},{"location":"model/random/","text":"Random effects \u2301 Since random number generators produce very jumpy values with various distributions between defined limits, I preferred trying a smoother, more \"organic\" noise function curve. Using a one-dimensional perlin-noise generator, an array of 17 * 17 = 289 values (perlin.json) is produced each night at midnight by perlin.js . Each value gets a timestamp in 5 minute increments. Read more about perlin noise here: https://github.com/andrewrk/node-perlin-noise#readme. Every five minutes, as the next SGV value is computed, the latest perlin noise value in the last 5 minutes is taken into account. For now, the best settings are amplitude 0.3, octaves 1 and persistance 0.3. The values are multiplied by 10, and then again by 18 to get mg/dl, then added to the SGV jst before upload.","title":"Random variation"},{"location":"model/random/#random-effects","text":"Since random number generators produce very jumpy values with various distributions between defined limits, I preferred trying a smoother, more \"organic\" noise function curve. Using a one-dimensional perlin-noise generator, an array of 17 * 17 = 289 values (perlin.json) is produced each night at midnight by perlin.js . Each value gets a timestamp in 5 minute increments. Read more about perlin noise here: https://github.com/andrewrk/node-perlin-noise#readme. Every five minutes, as the next SGV value is computed, the latest perlin noise value in the last 5 minutes is taken into account. For now, the best settings are amplitude 0.3, octaves 1 and persistance 0.3. The values are multiplied by 10, and then again by 18 to get mg/dl, then added to the SGV jst before upload.","title":"Random effects"},{"location":"operate/insulin/","text":"","title":"Declaring insulin doses"},{"location":"operate/meals/","text":"","title":"Declaring meals"},{"location":"operate/overview/","text":"","title":"Overview"},{"location":"operate/reports/","text":"","title":"View reports"}]}